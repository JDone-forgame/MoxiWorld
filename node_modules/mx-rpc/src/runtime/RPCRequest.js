"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RPCRequest = void 0;
const RPCNetBase_1 = require("./RPCNetBase");
// 这里提供rpc接口服务
class RPCRequest extends RPCNetBase_1.RPCNetBase {
    constructor(role, srv) {
        super(role, true, srv);
        this.genRPC = 0;
        this.mapRPCMap = new Map;
        this.on("RPCRET", this.onRPCBack.bind(this));
    }
    makeRequestID(role) {
        let id = "R" + role + "P" + process.pid + "I" + this.genRPC++;
        return id;
    }
    onRPCBack(context) {
        let code = context.args[0];
        let callP = this.mapRPCMap.get(context.requestID);
        if (!callP)
            return;
        // 移除请求
        this.mapRPCMap.delete(context.requestID);
        if (code == 0) {
            callP.reslove(context.args[1]);
        }
        else {
            callP.reject({ code: context.args[0], errMsg: context.args[1] });
        }
    }
    /**
     * 提供rpc的调用接口
     * @param dispatchKey 分发时的识别控制id
     * @param route 请求路径
     * @param args 请求参数
     */
    Call(dispatchKey, route, ...args) {
        return new Promise((reslove, reject) => {
            let reqId = dispatchKey + '.' + this.makeRequestID(this.role);
            this.send("RPC", reqId, [this.role, route].join("."), ...args);
            this.mapRPCMap.set(reqId, { reslove, reject });
        });
    }
    /**
     * 广播调用，这种就不需要统计返回结果了
     * @param toSelf 是否需要抄送自己
     * @param route
     * @param args
     */
    CallBroadcast(toSelf, route, ...args) {
        let reqId = this.makeRequestID(this.role);
        this.send("RPCBC", reqId, toSelf, [this.role, route].join("."), ...args);
    }
}
exports.RPCRequest = RPCRequest;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUlBDUmVxdWVzdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIlJQQ1JlcXVlc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBRUEsNkNBQTBDO0FBQzFDLGNBQWM7QUFDZCxNQUFhLFVBQVcsU0FBUSx1QkFBVTtJQVV0QyxZQUFZLElBQVksRUFBRSxHQUEyQjtRQUNqRCxLQUFLLENBQUMsSUFBSSxFQUFFLElBQUksRUFBRSxHQUFHLENBQUMsQ0FBQztRQVYzQixXQUFNLEdBQUcsQ0FBQyxDQUFDO1FBS1gsY0FBUyxHQUdKLElBQUksR0FBRyxDQUFDO1FBR1QsSUFBSSxDQUFDLEVBQUUsQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztJQUNqRCxDQUFDO0lBWFMsYUFBYSxDQUFDLElBQVk7UUFDaEMsSUFBSSxFQUFFLEdBQUcsR0FBRyxHQUFHLElBQUksR0FBRyxHQUFHLEdBQUcsT0FBTyxDQUFDLEdBQUcsR0FBRyxHQUFHLEdBQUcsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDO1FBQzlELE9BQU8sRUFBRSxDQUFDO0lBQ2QsQ0FBQztJQVVTLFNBQVMsQ0FBQyxPQUFtQjtRQUNuQyxJQUFJLElBQUksR0FBRyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQzNCLElBQUksS0FBSyxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUNsRCxJQUFJLENBQUMsS0FBSztZQUNOLE9BQU87UUFDWCxPQUFPO1FBQ1AsSUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQ3pDLElBQUksSUFBSSxJQUFJLENBQUMsRUFBRTtZQUNYLEtBQUssQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1NBQ2xDO2FBQ0k7WUFDRCxLQUFLLENBQUMsTUFBTSxDQUFDLEVBQUUsSUFBSSxFQUFFLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUUsTUFBTSxFQUFFLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDO1NBQ3BFO0lBQ0wsQ0FBQztJQUNEOzs7OztPQUtHO0lBQ0gsSUFBSSxDQUFJLFdBQW1CLEVBQUUsS0FBYSxFQUFFLEdBQUcsSUFBVztRQUN0RCxPQUFPLElBQUksT0FBTyxDQUFDLENBQUMsT0FBTyxFQUFFLE1BQU0sRUFBRSxFQUFFO1lBQ25DLElBQUksS0FBSyxHQUFHLFdBQVcsR0FBRyxHQUFHLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDOUQsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsS0FBSyxFQUFFLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxLQUFLLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsR0FBRyxJQUFJLENBQUMsQ0FBQztZQUMvRCxJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxLQUFLLEVBQUUsRUFBRSxPQUFPLEVBQUUsTUFBTSxFQUFFLENBQUMsQ0FBQztRQUNuRCxDQUFDLENBQUMsQ0FBQztJQUNQLENBQUM7SUFDRDs7Ozs7T0FLRztJQUNILGFBQWEsQ0FBQyxNQUFlLEVBQUUsS0FBYSxFQUFFLEdBQUcsSUFBVztRQUN4RCxJQUFJLEtBQUssR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUMxQyxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxLQUFLLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsR0FBRyxJQUFJLENBQUMsQ0FBQztJQUM3RSxDQUFDO0NBQ0o7QUFwREQsZ0NBb0RDIn0=