"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RPCNetBase = void 0;
const socket_io_1 = require("../net/socket.io");
const events_1 = require("events");
const proto_1 = require("../proto");
class RPCNetBase extends events_1.EventEmitter {
    constructor(role, req, srv) {
        super();
        // inside: InsideClient = gInsideClient;
        this.clientSign = proto_1.gSystemSign;
        this.centerSign = "";
        this.onConnect = (function () {
            process.nextTick(this.send.bind(this), "REGIST", this.role, this.isReq, this.clientSign);
        }).bind(this);
        this.isReq = req;
        this.role = role;
        if (typeof srv == "number") {
            this.net = new socket_io_1.RPCNetClient(srv);
        }
        else if (srv instanceof socket_io_1.RPCNetClient) {
            this.net = srv;
        }
        else {
            this.net = new socket_io_1.RPCNetClient();
        }
        this.net.on("data", this.onData.bind(this));
        this.net.on("disconnect", this._disconnect.bind(this));
        this.onConnect();
    }
    _disconnect() {
        // 这里标识网络断开了
        this.net.removeListener("connection", this.onConnect);
        this.net.once("connection", this.onConnect);
    }
    _untilConnected(r, j) {
        if (this.net.connected || this.net.connectedF) {
            if (this.net.connected)
                r(true);
            else
                j();
        }
        else
            setTimeout(this._untilConnected.bind(this, r, j), 10);
    }
    init() {
        return new Promise((resolve, reject) => {
            this._untilConnected(resolve, reject);
        });
    }
    registret(sign) {
        this.centerSign = sign;
    }
    send(...args) {
        // if (this.clientSign == this.centerSign) {
        //     return this.inside.send(...args);
        // }
        this.net.send(...args);
    }
    onData(type, requestID, route, ...args) {
        if (type == "REGISTRET") {
            this.registret(requestID);
            return;
        }
        // 这里route错了需要调整
        if (route == undefined || route == null || typeof route != "string") {
            console.error(...arguments);
            return;
        }
        let routes = route.split('.');
        // 确定一下角色正确性
        if (this.role != routes[0])
            return;
        if (this.listenerCount(type) != 0) {
            let content = {
                requestID: requestID,
                type: type,
                route: routes.slice(1, routes.length).join('.'),
                args: args,
            };
            this.emit(type, content);
        }
    }
}
exports.RPCNetBase = RPCNetBase;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUlBDTmV0QmFzZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIlJQQ05ldEJhc2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsZ0RBQWdEO0FBQ2hELG1DQUFzQztBQUN0QyxvQ0FBbUQ7QUFFbkQsTUFBYSxVQUFXLFNBQVEscUJBQVk7SUFPeEMsWUFBWSxJQUFZLEVBQUUsR0FBWSxFQUFFLEdBQTJCO1FBQy9ELEtBQUssRUFBRSxDQUFDO1FBTlosd0NBQXdDO1FBQ3hDLGVBQVUsR0FBRyxtQkFBVyxDQUFDO1FBQ3pCLGVBQVUsR0FBRyxFQUFFLENBQUM7UUE0QlIsY0FBUyxHQUFHLENBQUM7WUFDakIsT0FBTyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxRQUFRLEVBQUUsSUFBSSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUM3RixDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUE7UUF6QlQsSUFBSSxDQUFDLEtBQUssR0FBRyxHQUFHLENBQUM7UUFDakIsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7UUFDakIsSUFBSSxPQUFPLEdBQUcsSUFBSSxRQUFRLEVBQUU7WUFDeEIsSUFBSSxDQUFDLEdBQUcsR0FBRyxJQUFJLHdCQUFZLENBQUMsR0FBRyxDQUFDLENBQUM7U0FFcEM7YUFDSSxJQUFJLEdBQUcsWUFBWSx3QkFBWSxFQUFFO1lBQ2xDLElBQUksQ0FBQyxHQUFHLEdBQUcsR0FBRyxDQUFDO1NBQ2xCO2FBQ0k7WUFDRCxJQUFJLENBQUMsR0FBRyxHQUFHLElBQUksd0JBQVksRUFBRSxDQUFDO1NBQ2pDO1FBQ0QsSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENB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