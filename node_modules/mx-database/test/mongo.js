"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const src_1 = require("../src");
src_1.MongodbMoudle.regist_colltion("test", "libtest", []);
describe("测试", function () {
    before(function () {
        this.timeout(5000);
        return src_1.MongodbMoudle.init([{ host: "10.0.0.10", port: 27017 }]);
    });
    it("insert", function () {
        return src_1.MongodbMoudle.get_database("test").insert("libtest", { name: "nihao" });
    });
    it("list", function () {
        return new Promise(function (r, j) {
            return __awaiter(this, void 0, void 0, function* () {
                let vDB = yield src_1.MongodbMoudle.get_database("test").get_unit("libtest", { name: "nihao" });
                vDB.load().then(v1 => {
                    console.log("v1", Date.now());
                });
                vDB.load().then(v1 => {
                    console.log("v2", Date.now());
                });
                vDB.load().then(v1 => {
                    console.log("v3", Date.now());
                });
                r();
            });
        });
    });
    it("unit", function () {
        return new Promise(function (r, j) {
            src_1.MongodbMoudle.get_database("test").get_unit("libtest", { name: "nihao" }).load().then(function (v) {
                console.log(JSON.stringify(v.data));
                r();
            }).catch(j);
        });
    });
    after(function (done) {
        setTimeout(function () {
            process.exit(0);
        });
        done();
    });
});
//# sourceMappingURL=mongo.js.map